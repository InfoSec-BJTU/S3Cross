#[macro_use]
use cpsnarks_set;

use std::cell::RefCell;
use std::collections::hash_set::Intersection;
use std::fmt::Debug;
use std::mem;
use std::str::FromStr;
use cpsnarks_set::{
    commitments::{integer::IntegerCommitment, pedersen::PedersenCommitment, Commitment},
    parameters::Parameters,
    protocols::{
        hash_to_prime::{
            channel::{HashToPrimeProverChannel, HashToPrimeVerifierChannel},
            CRSHashToPrime, HashToPrimeError, HashToPrimeProtocol,
            Statement as HashToPrimeStatement, Witness as HashToPrimeWitness,
        },
        modeq::{
            channel::{ModEqProverChannel, ModEqVerifierChannel},
            CRSModEq, Proof as ModEqProof, Protocol as ModEqProtocol, Statement as ModEqStatement,
            Witness as ModEqWitness,
        },
        root::{
            channel::{RootProverChannel, RootVerifierChannel},
            CRSRoot, Proof as RootProof, Protocol as RootProtocol, Statement as RootStatement,
            Witness as RootWitness,
        },
        ProofError, SetupError, VerificationError,
    },
    utils::ConvertibleUnknownOrderGroup,
    utils::{curve::CurvePointProjective, random_between},
};
use cpsnarks_set::protocols::membership::channel::{MembershipProverChannel, MembershipVerifierChannel};
use rand::{CryptoRng, Rng, RngCore};

use rug::rand::MutRandState;
use rug::{Complete, Integer};

use cpsnarks_set::protocols::membership::{Protocol, Statement, Witness};
use {
    // cpsnarks_set::protocols::hash_to_prime::snark_range::Protocol as HPProtocol,
    // Change the Cargo.toml in cpsnarks_set to enable bulletproofs
    cpsnarks_set::protocols::hash_to_prime::bp::Protocol as HPProtocol,
    cpsnarks_set::protocols::{
        membership::transcript::{TranscriptProverChannel, TranscriptVerifierChannel},
    },
};

use accumulator::group::{Rsa2048, Rsa2048Elem};
use accumulator::{group::Group, AccumulatorWithoutHashToPrime};
use ark_bls12_381::{Bls12_381, G1Projective};
use merlin::Transcript;
use rand::thread_rng;
use rug::rand::RandState;
use std::time::Instant;
use blake2::digest::consts::U256;
use curve25519_dalek::ristretto::RistrettoPoint;
use curve25519_dalek::scalar::Scalar;

use num_bigint;
use num_bigint::BigUint;


pub fn test_alg() -> (u128, u128) {

    // 250 bits 9
    // let LARGE_PRIMES_2: [Integer; 9] = [
    //     // Integer::from_str_radix("1663223298318076277649146155573507446209937995538781406335956041011144585463", 10).unwrap(),
    //     Integer::from_str_radix("1568434470262874771251686497016960898682146623714954554281873933878925749101", 10).unwrap(),
    //     Integer::from_str_radix("1548870883299393892765678676821499981420788624386634800894370215475886837203", 10).unwrap(),
    //     Integer::from_str_radix("1722969580127004609302547666155647986936645221909676235574277464443096045061", 10).unwrap(),
    //     Integer::from_str_radix("1761777362213384466225299901606219554148150501103146659806524559634435555383", 10).unwrap(),
    //     Integer::from_str_radix("1571463333733186834069607719577555209234554495094314607465843378174134537851", 10).unwrap(),
    //     Integer::from_str_radix("1425732209023302116523903875016159226285853360972560345876130113812400079707", 10).unwrap(),
    //     Integer::from_str_radix("1554956462536568010869084239620322980607436731267717206042802695520368314729", 10).unwrap(),
    //     Integer::from_str_radix("1472656029932446186334205496744612903229951400178079774677194725105044519207", 10).unwrap(),
    //     Integer::from_str_radix("1536408335125390537473657203603339578743424213889079607813691558110863331253", 10).unwrap()
    // ];

    // 250 bits 19
    let LARGE_PRIMES_2: [Integer; 19] = [
        // Integer::from_str_radix("1713908968187066686474928745809233174394475786043228139379944334420341594357", 10).unwrap(),
        Integer::from_str_radix("1400790508453833239962827410053314169118724498679722460650652184313294692057", 10).unwrap(),
        Integer::from_str_radix("1636763850422250841694394826057733858068723114192437120140167446009996823133", 10).unwrap(),
        Integer::from_str_radix("1787649929499823728269397890465897824240256627261798772444749289031870902353", 10).unwrap(),
        Integer::from_str_radix("1504692308670930081072892586042960714460187332873034981000462853627560017677", 10).unwrap(),
        Integer::from_str_radix("1671755083901720987902439842394561460996670180058990678041003937488681825151", 10).unwrap(),
        Integer::from_str_radix("1487150511091118591822588419749694224229193582744438225589378972672220195721", 10).unwrap(),
        Integer::from_str_radix("1405901359221784153053359789904805320242519894069205621396263628950281829273", 10).unwrap(),
        Integer::from_str_radix("1738867017199679761332894327253575068384477552159835029863056012199561887871", 10).unwrap(),
        Integer::from_str_radix("1740391117970322195180239887957797865045690592379457680955255351024106761073", 10).unwrap(),
        Integer::from_str_radix("1725236370697327375505981707598760458597441780828880402426591809593983135221", 10).unwrap(),
        Integer::from_str_radix("1654670419095802300927659039427086658697527413803943709059858152035833872713", 10).unwrap(),
        Integer::from_str_radix("1620172835673183728197546154371648970634538043841495300067154004134708989733", 10).unwrap(),
        Integer::from_str_radix("1796224512875294359485526767800243226457409102257872841211450769541139777363", 10).unwrap(),
        Integer::from_str_radix("1539306908596114367471303940915989243671087570402772077016099076350935735391", 10).unwrap(),
        Integer::from_str_radix("1424605726731813272052729151507210772606578053666052474124303993531428892663", 10).unwrap(),
        Integer::from_str_radix("1746478528433683120448880954662258142134482480363494449994535541280489743963", 10).unwrap(),
        Integer::from_str_radix("1645039695527565287432364692648281196460204640404254631956715835392308412287", 10).unwrap(),
        Integer::from_str_radix("1571776181438034549975276622238169133543396107895998050300228471981494268689", 10).unwrap(),
        Integer::from_str_radix("1692003843662500577782198306713894687297293778349243797749072460597538533151", 10).unwrap()
    ];

    // 250 bits 159
    // let LARGE_PRIMES_2: [Integer; 159] = [
    //     // Integer::from_str_radix("1690850021967270988850057847513253289315120606964154008813253685714176029349", 10).unwrap(),
    //     Integer::from_str_radix("1400089199452893216491413675892209975803837785909806120739950993531988889731", 10).unwrap(),
    //     Integer::from_str_radix("1720433914355285926591725401485596505215042223881265847792322747317465215769", 10).unwrap(),
    //     Integer::from_str_radix("1767040663462630854476224282270137604563036151070333097361022148762088976263", 10).unwrap(),
    //     Integer::from_str_radix("1469876162285648417600577397511694646764729516609360349448698446850637841389", 10).unwrap(),
    //     Integer::from_str_radix("1361945146882163020971245816409091315448872811091734253345675904944248153083", 10).unwrap(),
    //     Integer::from_str_radix("1774437605426576882382874689732193917837338426045571617216690474537207813717", 10).unwrap(),
    //     Integer::from_str_radix("1725281427142100472965939314606628808182275628513526430776402201608849278817", 10).unwrap(),
    //     Integer::from_str_radix("1498450540339275435612120837463238155916874192837628824652770418477564636301", 10).unwrap(),
    //     Integer::from_str_radix("1608821693365527653568451136781293510730755653993875900040872287244701882221", 10).unwrap(),
    //     Integer::from_str_radix("1480081587719794059743592257307819643074877670074254717414564331949951558021", 10).unwrap(),
    //     Integer::from_str_radix("1672855353609305226451002463732086357429096097917304461712110657642017484551", 10).unwrap(),
    //     Integer::from_str_radix("1432050015041110321661306369253135176659180535769739344861236791626527282881", 10).unwrap(),
    //     Integer::from_str_radix("1460225207639652747320060466254325512477608302143814513545901934489806557159", 10).unwrap(),
    //     Integer::from_str_radix("1517839288683548305459647258921211967578917325485900170716590091389189014051", 10).unwrap(),
    //     Integer::from_str_radix("1572081290664250110392076075132575798632549399290495468991640657205817222547", 10).unwrap(),
    //     Integer::from_str_radix("1693346686123326049926723772642501120013340498039096661015527164730307006907", 10).unwrap(),
    //     Integer::from_str_radix("1660336994070234243231686170029605005510887199611492712898141025200688836357", 10).unwrap(),
    //     Integer::from_str_radix("1380452383047853445595824223243708494531570191803404523669944492866423990577", 10).unwrap(),
    //     Integer::from_str_radix("1409433611010361630678894332777963149168957219586557743720474928216006225951", 10).unwrap(),
    //     Integer::from_str_radix("1503149573224011707694781310170353655916203400539498962043988925893151640231", 10).unwrap(),
    //     Integer::from_str_radix("1486239793828298191125744252650231707132407495476024147322376208447322464311", 10).unwrap(),
    //     Integer::from_str_radix("1410138396493068398316116521631763069877435585036532970829008220352083557733", 10).unwrap(),
    //     Integer::from_str_radix("1724908371564099037064115374088965038568596807290291101638302489240186877811", 10).unwrap(),
    //     Integer::from_str_radix("1807603068283664291387703882291757269445891222634411323425594819853002776081", 10).unwrap(),
    //     Integer::from_str_radix("1622568866862650860023850909826343930823052796352839945659582941015352048791", 10).unwrap(),
    //     Integer::from_str_radix("1555987694875947951728406726380554913464239668263058687856864226124425713787", 10).unwrap(),
    //     Integer::from_str_radix("1370776757189603390357079535649727088801881551206436086662365151394713206401", 10).unwrap(),
    //     Integer::from_str_radix("1459249149877178826657665737038478626771501856900640097284626283347435137937", 10).unwrap(),
    //     Integer::from_str_radix("1601795242417462988778044808818330180542705180403998275438449013124097199961", 10).unwrap(),
    //     Integer::from_str_radix("1586751536690914793954254784876200640467202429095936145373110439923232255871", 10).unwrap(),
    //     Integer::from_str_radix("1760852061527591270421060675158257173861732551122933576302175124732183877809", 10).unwrap(),
    //     Integer::from_str_radix("1425412594853482832704857058272007006066635133685338316112354061353785623801", 10).unwrap(),
    //     Integer::from_str_radix("1568492046271484237208769770554443774842182808823060377560646197740717057777", 10).unwrap(),
    //     Integer::from_str_radix("1583378518036593350718785313619686800012106978101525525013251279755354044907", 10).unwrap(),
    //     Integer::from_str_radix("1572546673129793833478219130936142891228731360713049903924541461772999295467", 10).unwrap(),
    //     Integer::from_str_radix("1374673503281074325292036630656312480926615322636965939058121929745204814297", 10).unwrap(),
    //     Integer::from_str_radix("1395890253817417427436236695773911274647019755947907595755098450862863608403", 10).unwrap(),
    //     Integer::from_str_radix("1784647417590004687360942234698144210243279872605648496665527620570452941479", 10).unwrap(),
    //     Integer::from_str_radix("1487096265185688011572074144633560411746889904553630679424220750489006434113", 10).unwrap(),
    //     Integer::from_str_radix("1442606438366793463197031959215068727842194574099681561472400607666544748871", 10).unwrap(),
    //     Integer::from_str_radix("1385048177469676612854921875247710934999555393747145275052247009076345444401", 10).unwrap(),
    //     Integer::from_str_radix("1724073540466134995465781353261503432118783476626987039444354019884764148887", 10).unwrap(),
    //     Integer::from_str_radix("1726093151756440060634591066317197753508027518989360752992854803743606859609", 10).unwrap(),
    //     Integer::from_str_radix("1743491444945304332206790241005131345371968015974152056184519157314968120069", 10).unwrap(),
    //     Integer::from_str_radix("1792864181099643858684383659183092667146934842523129983051171456847264130881", 10).unwrap(),
    //     Integer::from_str_radix("1704195126741933278884506818044942526400964401163514396363542404560254316573", 10).unwrap(),
    //     Integer::from_str_radix("1630032251967712383229562516550383253017202782801853559034275570822433461253", 10).unwrap(),
    //     Integer::from_str_radix("1482260796656030031088997934934617279018123869900398337139001850007573968653", 10).unwrap(),
    //     Integer::from_str_radix("1454714934738335845515021565308778878153224229018912055285678402582138386647", 10).unwrap(),
    //     Integer::from_str_radix("1713521407063753623616621676812978287644662721815948447639138471160604337207", 10).unwrap(),
    //     Integer::from_str_radix("1429086856943801725722388650399132242573839823419869653307807346516346557661", 10).unwrap(),
    //     Integer::from_str_radix("1646571133342653027594797960675536798521271939175140370416498292501941593907", 10).unwrap(),
    //     Integer::from_str_radix("1721583178183496932330898280183890893309816764612404231530020450382411630511", 10).unwrap(),
    //     Integer::from_str_radix("1792779420271222721599170590380369348037127907142827879887200217940932382579", 10).unwrap(),
    //     Integer::from_str_radix("1365978833596903095087190796437194804922990888563613830552516462484923880133", 10).unwrap(),
    //     Integer::from_str_radix("1428137912629253237254752176207361420434856073671167760403194087235437565619", 10).unwrap(),
    //     Integer::from_str_radix("1681079019576931448861013750654072904456545034267515580469708579915664567703", 10).unwrap(),
    //     Integer::from_str_radix("1632276911223250547930471640932475009856459830562631826738452702291280565769", 10).unwrap(),
    //     Integer::from_str_radix("1565089916922391177896137565864147617172735038134770478212993487158822450799", 10).unwrap(),
    //     Integer::from_str_radix("1519408475062418685114684868943788462711478533665685139308719196180066447849", 10).unwrap(),
    //     Integer::from_str_radix("1696439676812203709622312674250600662891777862256994298378681207351276508673", 10).unwrap(),
    //     Integer::from_str_radix("1746531114170880144987336628503980690723228227619545780186452720076068755503", 10).unwrap(),
    //     Integer::from_str_radix("1771989286151154153343084784609580399853644217150668672283559751034859948141", 10).unwrap(),
    //     Integer::from_str_radix("1363608119734909595697879273795823548466624574330468449470030974621408036087", 10).unwrap(),
    //     Integer::from_str_radix("1730799782082018549497702122635527949518888505081030246237427468350140667469", 10).unwrap(),
    //     Integer::from_str_radix("1362524492651591779883709248567335861079172646278611767892384578607777706097", 10).unwrap(),
    //     Integer::from_str_radix("1733219345100540675106160621528216778157374390428071285066402060335748852271", 10).unwrap(),
    //     Integer::from_str_radix("1784943227066770707547852692726407076202013882209470235585103944235292735239", 10).unwrap(),
    //     Integer::from_str_radix("1531137446910512121620489575977701433384999747258403265230259519525961216481", 10).unwrap(),
    //     Integer::from_str_radix("1576960448320944281439487283304621356062577274541550382680203053865741537783", 10).unwrap(),
    //     Integer::from_str_radix("1762587609025532505522236624086907709994866513730662490504571005658051098169", 10).unwrap(),
    //     Integer::from_str_radix("1808293162438270365239607570829213896564620100161147798733815832027413215589", 10).unwrap(),
    //     Integer::from_str_radix("1390295550925086425397368068711564329058721644040824261490368755564139080283", 10).unwrap(),
    //     Integer::from_str_radix("1408183553074127587435012204615945381626040865482832671552520722145239181291", 10).unwrap(),
    //     Integer::from_str_radix("1437671584602229155825731712862553039327188531850928260194797447794745498899", 10).unwrap(),
    //     Integer::from_str_radix("1765728023893474318055448763571700014146253454550921646697491124261878780597", 10).unwrap(),
    //     Integer::from_str_radix("1536874913295331615898538939175026487130049070783354064913238052357427416861", 10).unwrap(),
    //     Integer::from_str_radix("1483229580464776910060763357501088584392614134772978021583800045026667429291", 10).unwrap(),
    //     Integer::from_str_radix("1565350554110211352037936253502145971297090898716479977669800080908878743649", 10).unwrap(),
    //     Integer::from_str_radix("1517145549139484326965841236336662929912239913856316262464919877292785912401", 10).unwrap(),
    //     Integer::from_str_radix("1459509664984843129737197767855840513367075442775545273686647668888980619299", 10).unwrap(),
    //     Integer::from_str_radix("1754774965612707206859375613352574927428069334046643631796970162584792348489", 10).unwrap(),
    //     Integer::from_str_radix("1535453768404518929491154377216523502459120643784625619077434932144147553129", 10).unwrap(),
    //     Integer::from_str_radix("1749351064102390671734455848331469516851376699473815547956901007833968634919", 10).unwrap(),
    //     Integer::from_str_radix("1432570603763912012477951974413708310344078953794702594428998835097401797483", 10).unwrap(),
    //     Integer::from_str_radix("1524167925262411746668787703709421850792052574711773407584931240158463148137", 10).unwrap(),
    //     Integer::from_str_radix("1508723738376453936977122237301775509022706278690857266278945116510101950961", 10).unwrap(),
    //     Integer::from_str_radix("1589216652653614266995056204189427037439458760457491928226260842832218291561", 10).unwrap(),
    //     Integer::from_str_radix("1385290743627281879579732497534362531150997002601159032437224205876414725117", 10).unwrap(),
    //     Integer::from_str_radix("1473237519544719939161168397318373430324807671072507597388610958019484931979", 10).unwrap(),
    //     Integer::from_str_radix("1406193624672654823577077095218960003082261436550815858359020489790224044787", 10).unwrap(),
    //     Integer::from_str_radix("1538570829938704834086547219102687420437741013189806670182276613088424316591", 10).unwrap(),
    //     Integer::from_str_radix("1499909421907020333640136312826600842499831424832333738886084366020481937987", 10).unwrap(),
    //     Integer::from_str_radix("1655223375723556620255646605302460251399416108477199269658043661383679238209", 10).unwrap(),
    //     Integer::from_str_radix("1565277231352920306019182322299594584553575717012791458968926867557332588831", 10).unwrap(),
    //     Integer::from_str_radix("1750993421966109325137096100968379034380490979477952531559404578192453964003", 10).unwrap(),
    //     Integer::from_str_radix("1524690677921302023527616690063883506620643329117997713390577274329790029299", 10).unwrap(),
    //     Integer::from_str_radix("1369546430966739746783056237446342364331456848485774563845790411706973039331", 10).unwrap(),
    //     Integer::from_str_radix("1655084997889546742227873035529368526909277588044245962374966701499769526649", 10).unwrap(),
    //     Integer::from_str_radix("1437374262400709441263363212388124751035367845782999445488734735246928272763", 10).unwrap(),
    //     Integer::from_str_radix("1749831715885169600235662222142501117914658334647149912601750696782862722651", 10).unwrap(),
    //     Integer::from_str_radix("1708299652541634965620883551072611045672908560337288497556686103749426135519", 10).unwrap(),
    //     Integer::from_str_radix("1539162996491891178647446498177086022465040352407311893285691211042747771483", 10).unwrap(),
    //     Integer::from_str_radix("1708796672079834964169523956665581395840849283275805663196727958752934803153", 10).unwrap(),
    //     Integer::from_str_radix("1594852798957872718987458030847220899602061712038095059713087470328660483523", 10).unwrap(),
    //     Integer::from_str_radix("1667946727680471050723490351244864172158076278023187999232173239177095670839", 10).unwrap(),
    //     Integer::from_str_radix("1593141079126923116890566736054883187012651730260489221314188007531793380643", 10).unwrap(),
    //     Integer::from_str_radix("1565411825260242177526011140660205913610310977366794914393949383113222734579", 10).unwrap(),
    //     Integer::from_str_radix("1463966633032812415045364863476689901693921675522523706707870324519015248203", 10).unwrap(),
    //     Integer::from_str_radix("1732561224927450808655620980601544178703730067302499349078967861754554194991", 10).unwrap(),
    //     Integer::from_str_radix("1807527192651623911403736054834130898205245376018084157269160811188607483707", 10).unwrap(),
    //     Integer::from_str_radix("1639622201197617729498242442561400025620191461666094003915799317819483059513", 10).unwrap(),
    //     Integer::from_str_radix("1490191738558084749442145232783159231130663967803209092367160676983789681271", 10).unwrap(),
    //     Integer::from_str_radix("1663859004634941985061442227055417839596763380172914509571509915685696742351", 10).unwrap(),
    //     Integer::from_str_radix("1540392318373777834589322973568497815448627604300684514052095442484071783609", 10).unwrap(),
    //     Integer::from_str_radix("1651051966785631123363006422839651124559321126493160409824590038050907094237", 10).unwrap(),
    //     Integer::from_str_radix("1622408436460950996801904036758696526278568700295830279479274359983777505333", 10).unwrap(),
    //     Integer::from_str_radix("1407313426079294155006130244377117168935001643540995603069258759249164140869", 10).unwrap(),
    //     Integer::from_str_radix("1443425164707502097845736700113705391999932197684880004855061933727118083387", 10).unwrap(),
    //     Integer::from_str_radix("1630592677764276788923953970514192681836823111321886155700718470967530849739", 10).unwrap(),
    //     Integer::from_str_radix("1740912342422160187497239995859738071658016129566926473088630529282095842809", 10).unwrap(),
    //     Integer::from_str_radix("1775984530463384899599146655173425168422247337604268031490293010308773985071", 10).unwrap(),
    //     Integer::from_str_radix("1447050725174862613010045034762876855052640279275202671244171606536278623113", 10).unwrap(),
    //     Integer::from_str_radix("1617808817980992593070763326354526027599923770261540959192996694759044249733", 10).unwrap(),
    //     Integer::from_str_radix("1765399787891343116795386772405759074830128627741880931053776463221925079357", 10).unwrap(),
    //     Integer::from_str_radix("1407298212047621196990247670841024043501876946646303735497062619531501292821", 10).unwrap(),
    //     Integer::from_str_radix("1468419801646902961965048948920216941025157916754706942132912763066509941507", 10).unwrap(),
    //     Integer::from_str_radix("1385946491933896124514787609322119549534061434021014185624365673508336876503", 10).unwrap(),
    //     Integer::from_str_radix("1373595093865833667335536751678757274657940069345005190082104370379809050473", 10).unwrap(),
    //     Integer::from_str_radix("1641546837878430974489637966491752882469610379391138362105920398419543821811", 10).unwrap(),
    //     Integer::from_str_radix("1724683043661307779121636694531838917570896230377570266952310184129884498617", 10).unwrap(),
    //     Integer::from_str_radix("1758197367275672860030388972536323324228296639085340692427797611781320282279", 10).unwrap(),
    //     Integer::from_str_radix("1444657635537874301942549760239376061020173237683374935946675583668269590847", 10).unwrap(),
    //     Integer::from_str_radix("1593073212598351518157657311247524769668681178238799829877712153686038691053", 10).unwrap(),
    //     Integer::from_str_radix("1693777477224245623562886040966197998431402223891783381919291845412048007019", 10).unwrap(),
    //     Integer::from_str_radix("1636163421551508708734022751990324416819812709911795057000389871350604221433", 10).unwrap(),
    //     Integer::from_str_radix("1717588490710699459854804015205004999869057129976947421662945563125300334971", 10).unwrap(),
    //     Integer::from_str_radix("1448092064719968526195752295641947952105431730546140173365318670879744867997", 10).unwrap(),
    //     Integer::from_str_radix("1520383509175470498637190525079462574760446000671899386077314248412855738437", 10).unwrap(),
    //     Integer::from_str_radix("1475152789442004683371314665303448252777987301238503005550744631021289294191", 10).unwrap(),
    //     Integer::from_str_radix("1468187385723569029257350902451717959300012901029844238954293029683559435723", 10).unwrap(),
    //     Integer::from_str_radix("1378952331487881570169695267392589915879546089843288171552977487060257800187", 10).unwrap(),
    //     Integer::from_str_radix("1445683428958843012330761647176187483908319017439776952256435360787874906653", 10).unwrap(),
    //     Integer::from_str_radix("1437620023295802566777853102043365784281992297245307541242130013770193802167", 10).unwrap(),
    //     Integer::from_str_radix("1633068535343688010623337475072990432819750992759469107832335706810321791357", 10).unwrap(),
    //     Integer::from_str_radix("1730051407723118779160542357968387235264697366409232008560259708348343143493", 10).unwrap(),
    //     Integer::from_str_radix("1634325487125351667073453663424994373475154005805751564049669382986576148577", 10).unwrap(),
    //     Integer::from_str_radix("1398983743714254847186580353067744298827587974886691560508498226885112366811", 10).unwrap(),
    //     Integer::from_str_radix("1420721492238110908659290340820755102320294019064670661029022639905626847743", 10).unwrap(),
    //     Integer::from_str_radix("1360367343689118906892109154559711719638608523182006284314507817182872809173", 10).unwrap(),
    //     Integer::from_str_radix("1593514748984487390063594936636431994320142473190382599352616888064330508651", 10).unwrap(),
    //     Integer::from_str_radix("1724542357429794468132743670283570563681703278796484205728255750573853075137", 10).unwrap(),
    //     Integer::from_str_radix("1676297541223107818824718685841643577371164469694139977166116256100794462363", 10).unwrap(),
    //     Integer::from_str_radix("1750574699329396774441070900586143722588923475942892064438406659190604371019", 10).unwrap(),
    //     Integer::from_str_radix("1753620408020666245143806848965468445594134243101532145994272893163158271951", 10).unwrap(),
    //     Integer::from_str_radix("1670265498246324617090604118406013905567763287867366941061041690779669662471", 10).unwrap(),
    //     Integer::from_str_radix("1599080378299132005202776507022019009510058340113034234459889501090402417963", 10).unwrap(),
    //     Integer::from_str_radix("1584179705224394592495173044569789401855206535566355228276170955474540437789", 10).unwrap(),
    //     Integer::from_str_radix("1457466194676275437149416100413436820293765033536790532967778493019072090167", 10).unwrap()
    // ];

    let params = Parameters::from_curve::<Scalar>().unwrap().0;

    let mut rng1 = RandState::new();
    rng1.seed(&Integer::from(13));
    let mut rng2 = thread_rng();

    // 可将Rsa2048取值变更为手动生成的大素数乘积
    let mut crs =
        Protocol::<Rsa2048, RistrettoPoint, HPProtocol>::setup(
            &params, &mut rng1, &mut rng2,
        )
        .unwrap()
        .crs;
    let protocol = Protocol::<Rsa2048, RistrettoPoint, HPProtocol>::from_crs(&crs);

    // value to be committed in both commitments
    let value = Integer::from_str_radix("1713908968187066686474928745809233174394475786043228139379944334420341594357", 10).unwrap();

    let randomness = Integer::from(5);
    let commitment = protocol
        .crs
        .crs_modeq
        .pedersen_commitment_parameters
        .commit(&value, &randomness)
        .unwrap();

    let accum =
        accumulator::Accumulator::<Rsa2048, Integer, AccumulatorWithoutHashToPrime>::empty();
    let accum = accum.add(
        &LARGE_PRIMES_2
            .iter()
            .skip(1)
            // .map(|p| Integer::from(*p))
            .map(|p| p.clone())
            .collect::<Vec<_>>(),
    );

    let accum = accum.add_with_proof(&[value.clone()]);
    let acc = accum.0.value;
    let w = accum.1.witness.0.value;

    let proof_transcript = RefCell::new(Transcript::new(b"membership"));
    crs.crs_hash_to_prime.hash_to_prime_parameters.transcript = Some(proof_transcript.clone());
    let mut verifier_channel = TranscriptVerifierChannel::new(&crs, &proof_transcript);
    let statement = Statement {
        c_e_q: commitment,
        c_p: acc,
    };

    let mut now = Instant::now();
    protocol
        .prove(
            &mut verifier_channel,
            &mut rng1,
            &mut rng2,
            &statement,
            &Witness {
                e: value,
                r_q: randomness,
                w,
            },
        )
        .unwrap();
    let cp_proof = now.elapsed().as_micros();

    let proof = verifier_channel.proof().unwrap();

    // Verify
    let verification_transcript = RefCell::new(Transcript::new(b"membership"));
    crs.crs_hash_to_prime.hash_to_prime_parameters.transcript =
        Some(verification_transcript.clone());
    let mut prover_channel =
        TranscriptProverChannel::new(&crs, &verification_transcript, &proof);
    now = Instant::now();
    protocol.verify(&mut prover_channel, &statement).unwrap();
    let cp_verify = now.elapsed().as_micros();

    (cp_proof, cp_verify)
}

